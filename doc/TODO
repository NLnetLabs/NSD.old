$Id$

NOTE: Some of these are probably out of date.

GENERAL
- Check old todo items in this list .

AUTOCONF
(old)+ check whether the --with-nsd-user exists in the system

ZONE COMPILER
(old)+ empty node should not cause NXDOMAIN
(old)- unify dns type table (name, dns type, yacc token, rdata types)
(old)- unify dns class table (name, dns type, yacc token)
- one db file per zone (as an option?) (featurecreep)?
  req by Alex (Bit). So that after rsync, zonec is fast with many zones.
- if a zone is dropped from the config file, but not removed from the
  nsd.db. NSD refuses to start. Should skip/drop the zone.
  Redesign file format, so that you can skip a zone more easily, this
  also makes multiply db files easier.
- profile the zonec compiling speed. Speed it up.
- wireformat interop. testing for IPSECKEY type.

SERVER
(old)- replace all ntohs(..) with #define .... something[i] and ntohs() it beforehand
(old)- make sure that we dont copy anything from the query we dont want to copy, like
  (old)funny headers etc
(old)- query buffer is now 64k, perhaps we want it smaller? (used to be 1k)
- check if close_all_sockets in server.c also needs to close the parent/child sockets.
- check if after forks you need to close sockets, i.e. if after a loop of reloads/...
  you start running out of fds.
- check that on a multihomed server the source address is the same as the
  sender to-address. ip-address: config lines, see what works. Need setup.

SECURITY

PURITY
(old)- some data is in network order some in host order, make it clear with prefixes
(old)- brush up the fuction and identifiers names
- The XFRD zone state can be split up in expired/service-possible and 
  in idle/zone-transfer-busy state flags. Is this more beautiful?

CLEANUP
(old)+ proper error/fatal/warning interfaces
- check LOG_INFO log message and see if they are useful.
- make so that startup sends SOA_INFO to xfrd just like reload does, prettier?

DOCUMENTATION
(old)- update DESIGN document

OPTIMISATIONS
- delete entire zone for AFXR during reload read in,
  now walks the tree, but could use a double linked list to speed up.
- less memory churn in deleting RRs/adding RRs: keep rrset->capacity num.
  initial read in capacity==limit, if you want to add RRs, alloc capacity*2.
- less memory churn in deleting rrsets : keep a linked list of deleted rrsets
  for reuse.
  Keep a list (based on buckets of size of the malloc) of rr arrays.
  Keep a list (based on buckets of size of malloc) of rdata arrays.
  Keep a list (buckets on size) of rdata_data allocs.
  For reuse, buckets on char size, because we know most are small anyway
  large ones can be discarded/churned.
- is_existing = 0 used to remove a domain. Check and test carefully.
	- test delete middle zone
	- test delete/add a domain and NXdomain/exist replies.
	- test delet domain and wildcard replies.

- in query_process, for every query incoming and answered, NSD mallocs
  the query name (in dname_make from process_query_section) and
  then frees it (in query reset). This could be a fixed buffer
  (2 + max_labels + maxdomainlen) = 255 + 128 + 2 bytes.
- compress dnames in ixfr queries (write_soa_buffer) (zone 2x, mname, rname).
  small gain, nasty code.
- compress dnames in tsig records, keyname, algorithname.
- compress names in packets by pointing to uncompressed_dname entries.
  After each DNAME(with uncompressed target) follows a CNAME that can be
  compressed in this way.
