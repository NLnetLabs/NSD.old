#!@shell@
#
# nsdc.sh -- a shell script to manage the beast
#
# Copyright (c) 2001-2006, NLnet Labs. All rights reserved.
#
# See LICENSE for the license.
#
#

# Optional configuration file for nsdc
configfile="@configfile@"

#
# Default values in absense of ${configfile} (Usually ``/etc/nsd/nsdc.conf'')
#
prefix="@prefix@"
exec_prefix="@exec_prefix@"

sbindir="@sbindir@"
zonesdir="@zonesdir@"
flags=""
dbfile=`${sbindir}/nsd-checkonf -o pidfile ${configfile}`
zonesfile="@zonesfile@"
pidfile="@pidfile@"

lockfile="@dbfile@.lock"

ZONEC_VERBOSE=-v

#
# Read in configuration file if any
#
if [ -f ${configfile} ]
then
	. ${configfile}
fi

#
# You sure heard this many times before: NO USER SERVICEABLE PARTS BELOW
#
signal() {
	if [ -s ${pidfile} ]
	then
		kill -"$1" `cat ${pidfile}` && return 0
	else
		echo "nsd is not running"
	fi
	return 1
}

lock() {
        (umask 222; echo "database locked by PID: $$" >${lockfile}) ||
                (cat ${lockfile} ; "echo aborting..." ; exit 1)
}

unlock() {
	rm -f ${lockfile}
}

case "$1" in
start)
	[ -x ${sbindir}/nsd ] && ${sbindir}/nsd -f ${dbfile} -P ${pidfile} ${flags}
	;;
stop)
	signal "TERM"
	;;
stats)
	signal "USR1"
	;;
reload)
	signal "HUP"
	;;
running)
	signal "0"
	;;
patch)
        # patch queue clearen
           # mv the file
           # apply
           # remove file
        # nsdc rebuild
        # nsdc reload
        ;;
rebuild)
	${sbindir}/zonec ${ZONEC_VERBOSE} -d ${zonesdir} -f ${dbfile}.$$ ${zonesfile} && mv ${dbfile}.$$ ${dbfile}
	result=$?
	[ $result != 0 ] && echo "${dbfile} is unmodified"
	rm -f ${dbfile}.$$
	exit ${result}
	;;
notify)
        # send notifies to localhost
	if [ ! -x "${notify}" ]
	then
		echo "nsd-notify was not installed on this system"
		exit 1
	fi

	# read the nsd.zones file
	while read zonekw zone file notifykw slaves
	do	
		if [ "X$zonekw" = "Xzone" -a "X$notifykw" = "Xnotify" ]
		then
			$notify -z "$zone" $slaves
		fi
	done < $zonesfile
	;;
restart)
	sh $0 stop && sleep 1 && sh $0 start
	;;
*)
	echo "Usage: `basename $0` {start|stop|reload|rebuild|restart|running|update|notify}" >&2
	;;
esac

exit $?
