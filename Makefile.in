#
# $Id: Makefile.in,v 1.31 2003/04/03 14:58:11 alexis Exp $
#
# Makefile -- one file to make them all, nsd(8)
#
# Alexis Yushin, <alexis@nlnetlabs.nl>
#
# Copyright (c) 2001, 2002, 2003, NLnet Labs. All rights reserved.
#
# This software is an open source.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#
# Redistributions of source code must retain the above copyright notice,
# this list of conditions and the following disclaimer.
#
# Redistributions in binary form must reproduce the above copyright notice,
# this list of conditions and the following disclaimer in the documentation
# and/or other materials provided with the distribution.
#
# Neither the name of the NLNET LABS nor the names of its contributors may
# be used to endorse or promote products derived from this software without
# specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
# TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
# PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#

# Standard installation pathnames
SHELL = @SHELL@
prefix	= @prefix@
exec_prefix = @exec_prefix@
sbindir	= @sbindir@
mandir = @mandir@

# NSD specific pathnames
configdir = @configdir@
pidfile = @pidfile@
zonesfile = @zonesfile@
dbfile = @dbfile@
configfile = @configfile@
zonesdir = @zonesdir@
namedxfer = @namedxfer@
user = @user@

CC		= @CC@
CFLAGS		= @CFLAGS@ @DEFS@ -I. -DDBFILE=\"$(dbfile)\" -DPIDFILE=\"$(pidfile)\" -DUSER=\"$(user)\"
LDFLAGS		= @LDFLAGS@
LIBS		= @LIBS@
LIBWRAP		= @LIBWRAP@
LIBOBJS		= @LIBOBJS@
INSTALL		= @INSTALL@
INSTALL_PROGRAM	= @INSTALL_PROGRAM@
INSTALL_DATA	= @INSTALL_DATA@

COMPILE		= $(CC) $(CFLAGS) -c
LINK		= $(CC) $(LDFLAGS)
EDIT		= sed \
			-e 's,@prefix\@,$(prefix),g' \
			-e 's,@exec_prefix\@,$(exec_prefix),g' \
			-e 's,@sbindir\@,$(sbindir),g' \
			-e 's,@configdir\@,$(configdir),g' \
			-e 's,@zonesdir\@,$(zonesdir),g' \
			-e 's,@pidfile\@,$(pidfile),g' \
			-e 's,@zonesfile\@,$(zonesfile),g' \
			-e 's,@dbfile\@,$(dbfile),g' \
			-e 's,@configfile\@,$(configfile),g' \
			-e 's,@namedxfer\@,$(namedxfer),g' \
			-e 's,@user\@,$(user),g'

all:	nsd zonec nsd-notify nsdc.sh nsdc.conf.sample

.c.o:
	$(CC) $(CFLAGS) -c $<

nsdc.sh:	nsdc.sh.in
	rm -f nsdc.sh
	$(EDIT) nsdc.sh.in > nsdc.sh

nsdc.conf.sample:	nsdc.conf.sample.in
	rm -f nsdc.conf.sample
	$(EDIT) nsdc.conf.sample.in > nsdc.conf.sample

install: all
	$(INSTALL) -d $(sbindir)
	$(INSTALL) -d $(configdir)
	$(INSTALL) -d $(mandir)
	$(INSTALL) -s nsd $(sbindir)/nsd
	$(INSTALL) -s zonec $(sbindir)/zonec
	$(INSTALL) -s nsd-notify $(sbindir)/nsd-notify
	$(INSTALL) nsdc.sh $(sbindir)/nsdc
	$(INSTALL_DATA) nsd.8 $(mandir)/man8
	$(INSTALL_DATA) nsdc.8 $(mandir)/man8
	$(INSTALL_DATA) zonec.8 $(mandir)/man8
	$(INSTALL_DATA) nsd-notify.8 $(mandir)/man8
	$(INSTALL_DATA) nsdc.conf.sample $(configfile).sample
	$(INSTALL_DATA) nsd.zones.sample $(zonesfile).sample

uninstall:
	@echo
	rm -f -- $(sbindir)/nsd $(sbindir)/zonec $(sbindir)/nsdc $(sbindir)/nsd-notify
	rm -f -- $(mandir)/man8/nsd.8 $(mandir)/man8/nsdc.8 $(mandir)/man8/zonec.8 $(mandir)/man8/nsd-notify.8
	rm -f -- $(pidfile) $(dbfile)
	@echo
	@echo "You still need to remove $(confdir) directory by hand."

nsd:	nsd.h dns.h nsd.o server.o query.o dbaccess.o rbtree.o hash.o $(LIBOBJS)
	$(LINK) -o $@ nsd.o server.o query.o dbaccess.o rbtree.o hash.o $(LIBOBJS) $(LIBWRAP) $(LIBS)

zonec:	zparser.h dns.h zonec.h zparser.o dname.o zonec.o dbcreate.o rbtree.o hash.o $(LIBOBJS)
	$(LINK) -o $@ zonec.o zparser.o dname.o dbcreate.o rbtree.o hash.o $(LIBOBJS) $(LIBS)

nsd-notify:	nsd-notify.c dname.o
	$(LINK) $(CFLAGS) -o $@ nsd-notify.c dname.o $(LIBS)

clean:
	rm -f zonec nsd zparser hash rbtree nsd-notify nsd-axfr *.o y.* *.core *.gmon nsd.db nsdc.sh nsdc.conf.sample

basename.o:	compat/basename.c
	$(COMPILE) -c compat/basename.c -o basename.o

inet_pton.o:	compat/inet_pton.c
	$(COMPILE) -c compat/inet_pton.c -o inet_pton.o

b64_pton.o:	compat/b64_pton.c
	$(COMPILE) -c compat/b64_pton.c -o b64_pton.o

b64_ntop.o:	compat/b64_ntop.c
	$(COMPILE) -c compat/b64_ntop.c -o b64_ntop.o

snprintf.o:	compat/snprintf.c
	$(COMPILE) -c compat/snprintf.c -o snprintf.o

vsnprintf.o:	compat/vsnprintf.c
	$(COMPILE) -c compat/vsnprintf.c -o vsnprintf.o

timegm.o:	compat/timegm.c
	$(COMPILE) -c compat/timegm.c -o timegm.o


# Test programs
rbtree:	rbtree.c rbtree.h
	$(COMPILE) -DTEST rbtree.c
	$(LINK) -o $@ rbtree.o $(LIBS)

hash:	hash.c hash.h
	$(COMPILE) -DTEST hash.c
	$(LINK) -o $@ hash.o $(LIBS)

zparser:	zparser.c dname.o  $(LIBOBJS)
	$(LINK) $(CFLAGS) -D TEST -o $@ zparser.c dname.o $(LIBOBJS) $(LIBS)

# autoconf rules
config.h.in:	configure.ac
	autoheader

configure:	configure.ac
	autoconf

# Dependencies
