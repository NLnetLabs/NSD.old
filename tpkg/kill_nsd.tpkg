#!/bin/sh
# This is a shell archive (produced by GNU sharutils 4.2.1).
# To extract the files from this archive, save it to some FILE, remove
# everything before the `!/bin/sh' line above, then type `sh FILE'.
#
# Made on 2006-04-06 16:05 CEST by <wouter@diva.nlnetlabs.nl>.
# Source directory was `/home/wouter/src/nsd/nsd/trunk/tpkg/kill_nsd.dir'.
#
# Existing files will *not* be overwritten unless `-c' is specified.
#
# This shar contains:
# length mode       name
# ------ ---------- ------------------------------------------
#     53 -rw------- kill_nsd.conf
#    188 -rw------- kill_nsd.db
#    298 -rw------- kill_nsd.dsc
#     37 -rw------- kill_nsd.help
#    936 -rw------- kill_nsd.pre
#    860 -rw------- kill_nsd.test
#    351 -rw------- kill_nsd.zone
#
save_IFS="${IFS}"
IFS="${IFS}:"
gettext_dir=FAILED
locale_dir=FAILED
first_param="$1"
for dir in $PATH
do
  if test "$gettext_dir" = FAILED && test -f $dir/gettext \
     && ($dir/gettext --version >/dev/null 2>&1)
  then
    set `$dir/gettext --version 2>&1`
    if test "$3" = GNU
    then
      gettext_dir=$dir
    fi
  fi
  if test "$locale_dir" = FAILED && test -f $dir/shar \
     && ($dir/shar --print-text-domain-dir >/dev/null 2>&1)
  then
    locale_dir=`$dir/shar --print-text-domain-dir`
  fi
done
IFS="$save_IFS"
if test "$locale_dir" = FAILED || test "$gettext_dir" = FAILED
then
  echo=echo
else
  TEXTDOMAINDIR=$locale_dir
  export TEXTDOMAINDIR
  TEXTDOMAIN=sharutils
  export TEXTDOMAIN
  echo="$gettext_dir/gettext -s"
fi
if touch -am -t 200112312359.59 $$.touch >/dev/null 2>&1 && test ! -f 200112312359.59 -a -f $$.touch; then
  shar_touch='touch -am -t $1$2$3$4$5$6.$7 "$8"'
elif touch -am 123123592001.59 $$.touch >/dev/null 2>&1 && test ! -f 123123592001.59 -a ! -f 123123592001.5 -a -f $$.touch; then
  shar_touch='touch -am $3$4$5$6$1$2.$7 "$8"'
elif touch -am 1231235901 $$.touch >/dev/null 2>&1 && test ! -f 1231235901 -a -f $$.touch; then
  shar_touch='touch -am $3$4$5$6$2 "$8"'
else
  shar_touch=:
  echo
  $echo 'WARNING: not restoring timestamps.  Consider getting and'
  $echo "installing GNU \`touch', distributed in GNU File Utilities..."
  echo
fi
rm -f 200112312359.59 123123592001.59 123123592001.5 1231235901 $$.touch
#
if mkdir _sh24020; then
  $echo 'x -' 'creating lock directory'
else
  $echo 'failed to create lock directory'
  exit 1
fi
# ============= kill_nsd.conf ==============
if test -f 'kill_nsd.conf' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'kill_nsd.conf' '(file already exists)'
else
  $echo 'x -' extracting 'kill_nsd.conf' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > 'kill_nsd.conf' &&
zone:
name: miek.nl         
zonefile: kill_nsd.zone
SHAR_EOF
  (set 20 06 03 13 10 11 09 'kill_nsd.conf'; eval "$shar_touch") &&
  chmod 0600 'kill_nsd.conf' ||
  $echo 'restore of' 'kill_nsd.conf' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'kill_nsd.conf:' 'MD5 check failed'
e5ede12f41cd497f574fd7d7ab9c17a4  kill_nsd.conf
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'kill_nsd.conf'`"
    test 53 -eq "$shar_count" ||
    $echo 'kill_nsd.conf:' 'original size' '53,' 'current size' "$shar_count!"
  fi
fi
# ============= kill_nsd.db ==============
if test -f 'kill_nsd.db' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'kill_nsd.db' '(file already exists)'
else
  $echo 'x -' extracting 'kill_nsd.db' '(binary)'
  sed 's/^X//' << 'SHAR_EOF' | uudecode &&
begin 600 kill_nsd.db
M3E-$9&)6,#<````!"01M:65K`FYL``````@!``4#;F5T``L%871O;VT#;F5T
M`!$%;6EE:V<%871O;VT#;F5T``0";FP`"01M:65K`FYL``X);FQN971L86)S
M`FYL`!,$;W!E;@EN;&YE=&QA8G,";FP`````!@````$`!@`!``$`!P`%1@``
M```(````!``$=X+.M``$```X0``$```.$``$``DZ@``$``%1@``````OO%_*
(3E-$9&)6,#<$
`
end
SHAR_EOF
  (set 20 06 03 13 10 11 09 'kill_nsd.db'; eval "$shar_touch") &&
  chmod 0600 'kill_nsd.db' ||
  $echo 'restore of' 'kill_nsd.db' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'kill_nsd.db:' 'MD5 check failed'
cb1be22f629888a43f5ab9b54466e8b2  kill_nsd.db
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'kill_nsd.db'`"
    test 188 -eq "$shar_count" ||
    $echo 'kill_nsd.db:' 'original size' '188,' 'current size' "$shar_count!"
  fi
fi
# ============= kill_nsd.dsc ==============
if test -f 'kill_nsd.dsc' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'kill_nsd.dsc' '(file already exists)'
else
  $echo 'x -' extracting 'kill_nsd.dsc' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > 'kill_nsd.dsc' &&
BaseName: kill_nsd
Version: 1.0
Description: Kill NSD and check if he is really gone
CreationDate: Mon Mar 13 10:11:09 CET 2006
Maintainer: Miek Gieben
Category: 
Component:
Depends: 0000_nsd-compile.tpkg
Help: kill_nsd.help
Pre: kill_nsd.pre
Post: 
Test: kill_nsd.test
AuxFiles: 
Passed:
Failure:
SHAR_EOF
  (set 20 06 03 13 10 13 08 'kill_nsd.dsc'; eval "$shar_touch") &&
  chmod 0600 'kill_nsd.dsc' ||
  $echo 'restore of' 'kill_nsd.dsc' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'kill_nsd.dsc:' 'MD5 check failed'
a90612c41d49aa5b7986283f2c05a7be  kill_nsd.dsc
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'kill_nsd.dsc'`"
    test 298 -eq "$shar_count" ||
    $echo 'kill_nsd.dsc:' 'original size' '298,' 'current size' "$shar_count!"
  fi
fi
# ============= kill_nsd.help ==============
if test -f 'kill_nsd.help' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'kill_nsd.help' '(file already exists)'
else
  $echo 'x -' extracting 'kill_nsd.help' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > 'kill_nsd.help' &&
There are no arguments for this test
SHAR_EOF
  (set 20 06 03 13 10 13 11 'kill_nsd.help'; eval "$shar_touch") &&
  chmod 0600 'kill_nsd.help' ||
  $echo 'restore of' 'kill_nsd.help' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'kill_nsd.help:' 'MD5 check failed'
528f43c1784ef350c3871f4cfd9ab1ba  kill_nsd.help
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'kill_nsd.help'`"
    test 37 -eq "$shar_count" ||
    $echo 'kill_nsd.help:' 'original size' '37,' 'current size' "$shar_count!"
  fi
fi
# ============= kill_nsd.pre ==============
if test -f 'kill_nsd.pre' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'kill_nsd.pre' '(file already exists)'
else
  $echo 'x -' extracting 'kill_nsd.pre' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > 'kill_nsd.pre' &&
# #-- kill_nsd.pre--#
# source the master var file when it's there
[ -f ../.tpkg.var.master ] && source ../.tpkg.var.master
# use .tpkg.var.test for in test variable passing
[ -f .tpkg.var.test ] && source .tpkg.var.test
# svnserve resets the path, you may need to adjust it, like this:
export PATH=$PATH:/usr/sbin:/sbin:/usr/local/bin:/usr/local/sbin:.
X
# start NSD
RAND=$(($RANDOM % 300))
TPKG_PORT=$((5353 + $RAND))
PRE="../.."
TPKG_NSD_PID="$PRE/nsd.pid.$$"
TPKG_ZONEC="$PRE/zonec"
TPKG_NSD="$PRE/nsd"
X
# share the vars
echo "export TPKG_PORT=$TPKG_PORT" > .tpkg.var.test
echo "export TPKG_NSD_PID=$TPKG_NSD_PID" >> .tpkg.var.test
X
# debug echo of command.
echo $TPKG_ZONEC -c kill_nsd.conf -f kill_nsd.db 
echo $TPKG_NSD -c kill_nsd.conf -u $LOGNAME -p $TPKG_PORT -P $TPKG_NSD_PID -f kill_nsd.db
X
$TPKG_ZONEC -c kill_nsd.conf -f kill_nsd.db && \
$TPKG_NSD -c kill_nsd.conf -u $LOGNAME -p $TPKG_PORT -P $TPKG_NSD_PID -f kill_nsd.db
SHAR_EOF
  (set 20 06 04 06 14 14 53 'kill_nsd.pre'; eval "$shar_touch") &&
  chmod 0600 'kill_nsd.pre' ||
  $echo 'restore of' 'kill_nsd.pre' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'kill_nsd.pre:' 'MD5 check failed'
f0eb2b545e749a05ff25b3ccc2104c64  kill_nsd.pre
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'kill_nsd.pre'`"
    test 936 -eq "$shar_count" ||
    $echo 'kill_nsd.pre:' 'original size' '936,' 'current size' "$shar_count!"
  fi
fi
# ============= kill_nsd.test ==============
if test -f 'kill_nsd.test' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'kill_nsd.test' '(file already exists)'
else
  $echo 'x -' extracting 'kill_nsd.test' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > 'kill_nsd.test' &&
# #-- kill_nsd.test --#
# source the master var file when it's there
[ -f ../.tpkg.var.master ] && source ../.tpkg.var.master
# use .tpkg.var.test for in test variable passing
[ -f .tpkg.var.test ] && source .tpkg.var.test
# svnserve resets the path, you may need to adjust it, like this:
PATH=$PATH:/usr/sbin:/sbin:/usr/local/bin:/usr/local/sbin:.
X
echo "NSD PORT: $TPKG_PORT"
X
# check if the pid file is already created (i.e. NSD has started)
if [[ ! -f $TPKG_NSD_PID ]]; then
X	sleep 5
X	if [[ ! -f $TPKG_NSD_PID ]]; then
X		echo error no pid file in 5 seconds.
X		exit 1
X	fi
fi
X
# kill NSD
NSD_PID=`cat $TPKG_NSD_PID`
echo kill $NSD_PID
kill $NSD_PID 2>/dev/null
sleep 1 # should be really dead now - just to be sure kill it again
X
ps waux | awk ' { print $2 } ' | grep -v grep | grep "^$NSD_PID$"
if [[ $? -eq 0 ]]; then
X        exit 1
else
X        exit 0
fi
SHAR_EOF
  (set 20 06 04 06 16 05 09 'kill_nsd.test'; eval "$shar_touch") &&
  chmod 0600 'kill_nsd.test' ||
  $echo 'restore of' 'kill_nsd.test' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'kill_nsd.test:' 'MD5 check failed'
d69cb18fd5b35f1d4835e0c04a690031  kill_nsd.test
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'kill_nsd.test'`"
    test 860 -eq "$shar_count" ||
    $echo 'kill_nsd.test:' 'original size' '860,' 'current size' "$shar_count!"
  fi
fi
# ============= kill_nsd.zone ==============
if test -f 'kill_nsd.zone' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'kill_nsd.zone' '(file already exists)'
else
  $echo 'x -' extracting 'kill_nsd.zone' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > 'kill_nsd.zone' &&
$TTL    4D
$ORIGIN miek.nl.
@       IN      SOA     open.nlnetlabs.nl. miekg.atoom.net. (
X                         2005061300         ; Serial
X                             4H         ; Refresh
X                             1H         ; Retry
X                             7D         ; Expire
X                             1D )       ; Negative Cache TTL
SHAR_EOF
  (set 20 06 03 13 10 11 42 'kill_nsd.zone'; eval "$shar_touch") &&
  chmod 0600 'kill_nsd.zone' ||
  $echo 'restore of' 'kill_nsd.zone' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'kill_nsd.zone:' 'MD5 check failed'
63f98705a4af4c6d2cfa101bbf3b7fbb  kill_nsd.zone
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'kill_nsd.zone'`"
    test 351 -eq "$shar_count" ||
    $echo 'kill_nsd.zone:' 'original size' '351,' 'current size' "$shar_count!"
  fi
fi
rm -fr _sh24020
exit 0
