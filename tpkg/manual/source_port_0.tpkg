#!/bin/sh
# This is a shell archive (produced by GNU sharutils 4.2.1).
# To extract the files from this archive, save it to some FILE, remove
# everything before the `!/bin/sh' line above, then type `sh FILE'.
#
# Made on 2006-02-01 13:14 CET by <miekg@elektron>.
# Source directory was `/home/miekg/svn/nsd/branches/NSD_2_2/tpkg/manual/source_port_0.dir'.
#
# Existing files will *not* be overwritten unless `-c' is specified.
#
# This shar contains:
# length mode       name
# ------ ---------- ------------------------------------------
#     39 -rw------- source_port_0.conf
#    343 -rw------- source_port_0.dsc
#    499 -rw------- source_port_0.post
#    369 -rw------- source_port_0.pre
#    578 -rw------- source_port_0.test
#    691 -rw------- source_port_0.zone
#
save_IFS="${IFS}"
IFS="${IFS}:"
gettext_dir=FAILED
locale_dir=FAILED
first_param="$1"
for dir in $PATH
do
  if test "$gettext_dir" = FAILED && test -f $dir/gettext \
     && ($dir/gettext --version >/dev/null 2>&1)
  then
    set `$dir/gettext --version 2>&1`
    if test "$3" = GNU
    then
      gettext_dir=$dir
    fi
  fi
  if test "$locale_dir" = FAILED && test -f $dir/shar \
     && ($dir/shar --print-text-domain-dir >/dev/null 2>&1)
  then
    locale_dir=`$dir/shar --print-text-domain-dir`
  fi
done
IFS="$save_IFS"
if test "$locale_dir" = FAILED || test "$gettext_dir" = FAILED
then
  echo=echo
else
  TEXTDOMAINDIR=$locale_dir
  export TEXTDOMAINDIR
  TEXTDOMAIN=sharutils
  export TEXTDOMAIN
  echo="$gettext_dir/gettext -s"
fi
if touch -am -t 200112312359.59 $$.touch >/dev/null 2>&1 && test ! -f 200112312359.59 -a -f $$.touch; then
  shar_touch='touch -am -t $1$2$3$4$5$6.$7 "$8"'
elif touch -am 123123592001.59 $$.touch >/dev/null 2>&1 && test ! -f 123123592001.59 -a ! -f 123123592001.5 -a -f $$.touch; then
  shar_touch='touch -am $3$4$5$6$1$2.$7 "$8"'
elif touch -am 1231235901 $$.touch >/dev/null 2>&1 && test ! -f 1231235901 -a -f $$.touch; then
  shar_touch='touch -am $3$4$5$6$2 "$8"'
else
  shar_touch=:
  echo
  $echo 'WARNING: not restoring timestamps.  Consider getting and'
  $echo "installing GNU \`touch', distributed in GNU File Utilities..."
  echo
fi
rm -f 200112312359.59 123123592001.59 123123592001.5 1231235901 $$.touch
#
if mkdir _sh04874; then
  $echo 'x -' 'creating lock directory'
else
  $echo 'failed to create lock directory'
  exit 1
fi
# ============= source_port_0.conf ==============
if test -f 'source_port_0.conf' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'source_port_0.conf' '(file already exists)'
else
  $echo 'x -' extracting 'source_port_0.conf' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > 'source_port_0.conf' &&
zone    test.nl.    source_port_0.zone
SHAR_EOF
  (set 20 06 02 01 12 59 02 'source_port_0.conf'; eval "$shar_touch") &&
  chmod 0600 'source_port_0.conf' ||
  $echo 'restore of' 'source_port_0.conf' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'source_port_0.conf:' 'MD5 check failed'
195173b68ebf71e3c1ee40ca260e49eb  source_port_0.conf
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'source_port_0.conf'`"
    test 39 -eq "$shar_count" ||
    $echo 'source_port_0.conf:' 'original size' '39,' 'current size' "$shar_count!"
  fi
fi
# ============= source_port_0.dsc ==============
if test -f 'source_port_0.dsc' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'source_port_0.dsc' '(file already exists)'
else
  $echo 'x -' extracting 'source_port_0.dsc' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > 'source_port_0.dsc' &&
BaseName: source_port_0
Version: 1.0
Description: send a pkt to NSD with src port 0
CreationDate: Wed Feb  1 12:59:02 CET 2006
Maintainer: Miek Gieben
Category: 
Component:
Depends: 0000_nsd-compile.tpkg
Pre: source_port_0.pre
Post: source_port_0.post
Test: source_port_0.test
AuxFiles: source_port_0.zone, source_port_0.conf
Passed:
Failure:
SHAR_EOF
  (set 20 06 02 01 13 06 13 'source_port_0.dsc'; eval "$shar_touch") &&
  chmod 0600 'source_port_0.dsc' ||
  $echo 'restore of' 'source_port_0.dsc' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'source_port_0.dsc:' 'MD5 check failed'
a8f3267a694c95bed36c9eb76c7e18dc  source_port_0.dsc
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'source_port_0.dsc'`"
    test 343 -eq "$shar_count" ||
    $echo 'source_port_0.dsc:' 'original size' '343,' 'current size' "$shar_count!"
  fi
fi
# ============= source_port_0.post ==============
if test -f 'source_port_0.post' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'source_port_0.post' '(file already exists)'
else
  $echo 'x -' extracting 'source_port_0.post' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > 'source_port_0.post' &&
# source the var file when it's there
[ -f ../.tpkg.var.master ] && source ../.tpkg.var.master
[ -f .tpkg.var.test ] && source .tpkg.var.test
# svnserve resets the path, you may need to adjust it, like this:
export PATH=/usr/local/bin:/usr/local/sbin:/sbin:/usr/sbin:/bin:/usr/bin:
X
if [ -z $TPKG_NSD_PID ]; then
X        exit 0
fi
X
# kill NSD
NSD_PID=`cat $TPKG_NSD_PID`
kill $NSD_PID 2>/dev/null
sleep 1 # should be really dead now - just to be sure kill it again
kill $NSD_PID 2>/dev/null
X
Xexit 0
SHAR_EOF
  (set 20 06 02 01 13 05 53 'source_port_0.post'; eval "$shar_touch") &&
  chmod 0600 'source_port_0.post' ||
  $echo 'restore of' 'source_port_0.post' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'source_port_0.post:' 'MD5 check failed'
d2e2481380450afbabc69bee92e707c5  source_port_0.post
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'source_port_0.post'`"
    test 499 -eq "$shar_count" ||
    $echo 'source_port_0.post:' 'original size' '499,' 'current size' "$shar_count!"
  fi
fi
# ============= source_port_0.pre ==============
if test -f 'source_port_0.pre' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'source_port_0.pre' '(file already exists)'
else
  $echo 'x -' extracting 'source_port_0.pre' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > 'source_port_0.pre' &&
# source the var file when it's there
[ -f ../.tpkg.var.master ] && source ../.tpkg.var.master
# svnserve resets the path
# you may need to adjust it
export PATH=/usr/local/bin:/usr/local/sbin:/sbin:/usr/sbin:/bin:/usr/bin:
X
# start NSD
PRE="../../.." # we one level deeper
TPKG_ZONEC="$PRE/zonec"
X
# create .db file
$TPKG_ZONEC -f source_port_0.db source_port_0.conf 
SHAR_EOF
  (set 20 06 02 01 13 10 48 'source_port_0.pre'; eval "$shar_touch") &&
  chmod 0600 'source_port_0.pre' ||
  $echo 'restore of' 'source_port_0.pre' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'source_port_0.pre:' 'MD5 check failed'
9f281e70154a745ccf3b8b55005e118a  source_port_0.pre
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'source_port_0.pre'`"
    test 369 -eq "$shar_count" ||
    $echo 'source_port_0.pre:' 'original size' '369,' 'current size' "$shar_count!"
  fi
fi
# ============= source_port_0.test ==============
if test -f 'source_port_0.test' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'source_port_0.test' '(file already exists)'
else
  $echo 'x -' extracting 'source_port_0.test' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > 'source_port_0.test' &&
# source the var file when it's there
[ -f ../.tpkg.var.master ] && source ../.tpkg.var.master
[ -f .tpkg.var.test ] && source .tpkg.var.test
# svnserve resets the path, you may need to adjust it, like this:
export PATH=/usr/local/bin:/usr/local/sbin:/sbin:/usr/sbin:/bin:/usr/bin:
X
((TPKG_PORT=5353+$RANDOM))
TPKG_NSD_PID="../../../nsd.pid.$$"
X../../../nsd -d -u $LOGNAME -p $TPKG_PORT -P $TPKG_NSD_PID \
-f source_port_0.db &
sleep 1
X
sudo hping --keep -c 1 -s 0 -p $TPKG_PORT --udp localhost
fail=$?         
X
if [[ $fail -eq 1 ]]; then
X        exit 0
else
X        exit 1
fi
SHAR_EOF
  (set 20 06 02 01 13 14 41 'source_port_0.test'; eval "$shar_touch") &&
  chmod 0600 'source_port_0.test' ||
  $echo 'restore of' 'source_port_0.test' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'source_port_0.test:' 'MD5 check failed'
0c2d481b692c9b156b59181ed18a01a9  source_port_0.test
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'source_port_0.test'`"
    test 578 -eq "$shar_count" ||
    $echo 'source_port_0.test:' 'original size' '578,' 'current size' "$shar_count!"
  fi
fi
# ============= source_port_0.zone ==============
if test -f 'source_port_0.zone' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'source_port_0.zone' '(file already exists)'
else
  $echo 'x -' extracting 'source_port_0.zone' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > 'source_port_0.zone' &&
$TTL    4D
$ORIGIN test.nl.
@       IN      SOA     open.nlnetlabs.nl. miekg.atoom.net. (
X                         2005061300         ; Serial
X                             4H         ; Refresh
X                             1H         ; Retry
X                             7D         ; Expire
X                             1D )       ; Negative Cache TTL
X                IN      NS      open.nlnetlabs.nl.
X                IN      MX      20 mail.atoom.net.
X                IN      MX      20 sol.nlnetlabs.nl.
X
a               IN      A       80.127.17.126
www             IN      CNAME   a
_foobar._tcp    SRV 0 1 9 old-slow-box.example.com.
X                SRV 0 3 9 new-fast-box.example.com.
SHAR_EOF
  (set 20 06 02 01 12 59 02 'source_port_0.zone'; eval "$shar_touch") &&
  chmod 0600 'source_port_0.zone' ||
  $echo 'restore of' 'source_port_0.zone' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'source_port_0.zone:' 'MD5 check failed'
63c4686ad12cc623482134f87c3c14f6  source_port_0.zone
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'source_port_0.zone'`"
    test 691 -eq "$shar_count" ||
    $echo 'source_port_0.zone:' 'original size' '691,' 'current size' "$shar_count!"
  fi
fi
rm -fr _sh04874
exit 0
