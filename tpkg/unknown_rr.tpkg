#!/bin/sh
# This is a shell archive (produced by GNU sharutils 4.2.1).
# To extract the files from this archive, save it to some FILE, remove
# everything before the `!/bin/sh' line above, then type `sh FILE'.
#
# Made on 2006-03-06 12:31 CET by <wouter@diva.nlnetlabs.nl>.
# Source directory was `/home/wouter/src/nsd/nsd/trunk/tpkg/unknown_rr.dir'.
#
# Existing files will *not* be overwritten unless `-c' is specified.
#
# This shar contains:
# length mode       name
# ------ ---------- ------------------------------------------
#     49 -rw------- unknown_rr.conf
#    290 -rw------- unknown_rr.dsc
#     35 -rw------- unknown_rr.help
#     51 -rw------- unknown_rr.include_zone
#    450 -rw------- unknown_rr.test
#    817 -rw------- unknown_rr.zone
#
save_IFS="${IFS}"
IFS="${IFS}:"
gettext_dir=FAILED
locale_dir=FAILED
first_param="$1"
for dir in $PATH
do
  if test "$gettext_dir" = FAILED && test -f $dir/gettext \
     && ($dir/gettext --version >/dev/null 2>&1)
  then
    set `$dir/gettext --version 2>&1`
    if test "$3" = GNU
    then
      gettext_dir=$dir
    fi
  fi
  if test "$locale_dir" = FAILED && test -f $dir/shar \
     && ($dir/shar --print-text-domain-dir >/dev/null 2>&1)
  then
    locale_dir=`$dir/shar --print-text-domain-dir`
  fi
done
IFS="$save_IFS"
if test "$locale_dir" = FAILED || test "$gettext_dir" = FAILED
then
  echo=echo
else
  TEXTDOMAINDIR=$locale_dir
  export TEXTDOMAINDIR
  TEXTDOMAIN=sharutils
  export TEXTDOMAIN
  echo="$gettext_dir/gettext -s"
fi
if touch -am -t 200112312359.59 $$.touch >/dev/null 2>&1 && test ! -f 200112312359.59 -a -f $$.touch; then
  shar_touch='touch -am -t $1$2$3$4$5$6.$7 "$8"'
elif touch -am 123123592001.59 $$.touch >/dev/null 2>&1 && test ! -f 123123592001.59 -a ! -f 123123592001.5 -a -f $$.touch; then
  shar_touch='touch -am $3$4$5$6$1$2.$7 "$8"'
elif touch -am 1231235901 $$.touch >/dev/null 2>&1 && test ! -f 1231235901 -a -f $$.touch; then
  shar_touch='touch -am $3$4$5$6$2 "$8"'
else
  shar_touch=:
  echo
  $echo 'WARNING: not restoring timestamps.  Consider getting and'
  $echo "installing GNU \`touch', distributed in GNU File Utilities..."
  echo
fi
rm -f 200112312359.59 123123592001.59 123123592001.5 1231235901 $$.touch
#
if mkdir _sh19340; then
  $echo 'x -' 'creating lock directory'
else
  $echo 'failed to create lock directory'
  exit 1
fi
# ============= unknown_rr.conf ==============
if test -f 'unknown_rr.conf' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'unknown_rr.conf' '(file already exists)'
else
  $echo 'x -' extracting 'unknown_rr.conf' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > 'unknown_rr.conf' &&
zone:	name: "miek.nl"
X	zonefile: unknown_rr.zone
SHAR_EOF
  (set 20 06 03 06 12 31 42 'unknown_rr.conf'; eval "$shar_touch") &&
  chmod 0600 'unknown_rr.conf' ||
  $echo 'restore of' 'unknown_rr.conf' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'unknown_rr.conf:' 'MD5 check failed'
e516fe9c72d118b687c7e3e882d53708  unknown_rr.conf
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'unknown_rr.conf'`"
    test 49 -eq "$shar_count" ||
    $echo 'unknown_rr.conf:' 'original size' '49,' 'current size' "$shar_count!"
  fi
fi
# ============= unknown_rr.dsc ==============
if test -f 'unknown_rr.dsc' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'unknown_rr.dsc' '(file already exists)'
else
  $echo 'x -' extracting 'unknown_rr.dsc' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > 'unknown_rr.dsc' &&
BaseName: unknown_rr
Version: 1.0
Description: Test for working unknown RRs
CreationDate: Thu Dec 15 10:06:00 CET 2005
Maintainer: Miek Gieben
Category: 
Component:
Depends: 
Help: unknown_rr.help
Pre:
Post:
Test: unknown_rr.test
AuxFiles: unknown_rr.conf, unknown_rr.zone
Passed:
Failure:
SHAR_EOF
  (set 20 05 12 15 10 15 59 'unknown_rr.dsc'; eval "$shar_touch") &&
  chmod 0600 'unknown_rr.dsc' ||
  $echo 'restore of' 'unknown_rr.dsc' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'unknown_rr.dsc:' 'MD5 check failed'
df55d5fd0ffd938c9d142961462e307e  unknown_rr.dsc
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'unknown_rr.dsc'`"
    test 290 -eq "$shar_count" ||
    $echo 'unknown_rr.dsc:' 'original size' '290,' 'current size' "$shar_count!"
  fi
fi
# ============= unknown_rr.help ==============
if test -f 'unknown_rr.help' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'unknown_rr.help' '(file already exists)'
else
  $echo 'x -' extracting 'unknown_rr.help' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > 'unknown_rr.help' &&
No arguments are used in this test
SHAR_EOF
  (set 20 05 12 15 10 16 02 'unknown_rr.help'; eval "$shar_touch") &&
  chmod 0600 'unknown_rr.help' ||
  $echo 'restore of' 'unknown_rr.help' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'unknown_rr.help:' 'MD5 check failed'
37c804368f8daaa79280c2c2256d38d9  unknown_rr.help
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'unknown_rr.help'`"
    test 35 -eq "$shar_count" ||
    $echo 'unknown_rr.help:' 'original size' '35,' 'current size' "$shar_count!"
  fi
fi
# ============= unknown_rr.include_zone ==============
if test -f 'unknown_rr.include_zone' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'unknown_rr.include_zone' '(file already exists)'
else
  $echo 'x -' extracting 'unknown_rr.include_zone' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > 'unknown_rr.include_zone' &&
$INCLUDE zonec_tests.soa
$INCLUDE zonec_tests.data
SHAR_EOF
  (set 20 05 11 01 11 28 53 'unknown_rr.include_zone'; eval "$shar_touch") &&
  chmod 0600 'unknown_rr.include_zone' ||
  $echo 'restore of' 'unknown_rr.include_zone' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'unknown_rr.include_zone:' 'MD5 check failed'
4a8e609b078693f87ebeb0ecaa06083b  unknown_rr.include_zone
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'unknown_rr.include_zone'`"
    test 51 -eq "$shar_count" ||
    $echo 'unknown_rr.include_zone:' 'original size' '51,' 'current size' "$shar_count!"
  fi
fi
# ============= unknown_rr.test ==============
if test -f 'unknown_rr.test' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'unknown_rr.test' '(file already exists)'
else
  $echo 'x -' extracting 'unknown_rr.test' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > 'unknown_rr.test' &&
# #-- zonec_tests.test --#
# source the master var file when it's there
[ -f ../.tpkg.var.master ] && source ../.tpkg.var.master
# use .tpkg.var.test for in test variable passing
[ -f .tpkg.var.test ] && source .tpkg.var.test
# svnserve resets the path, you may need to adjust it, like this:
PATH=$PATH:/usr/sbin:/sbin:/usr/local/bin:/usr/local/sbin:.
X
# run zonec
PRE="../.."
TPKG_ZONEC="$PRE/zonec"
X
$TPKG_ZONEC -f unknown_rr.db -c unknown_rr.conf
SHAR_EOF
  (set 20 06 03 06 12 31 10 'unknown_rr.test'; eval "$shar_touch") &&
  chmod 0600 'unknown_rr.test' ||
  $echo 'restore of' 'unknown_rr.test' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'unknown_rr.test:' 'MD5 check failed'
092b521327fbbdee668c711af573803d  unknown_rr.test
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'unknown_rr.test'`"
    test 450 -eq "$shar_count" ||
    $echo 'unknown_rr.test:' 'original size' '450,' 'current size' "$shar_count!"
  fi
fi
# ============= unknown_rr.zone ==============
if test -f 'unknown_rr.zone' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'unknown_rr.zone' '(file already exists)'
else
  $echo 'x -' extracting 'unknown_rr.zone' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > 'unknown_rr.zone' &&
$TTL    1H
@       IN      SOA     elektron.atoom.net. miekg.atoom.net. (
X                     2005060700         ; Serial
X                             6H         ; Refresh
X                             2H         ; Retry
X                             7D         ; Expire
X                             1H )       ; Negative Cache TTL
X
@       IN      NS      elektron.atoom.net.
X        IN      TYPE10  \# 2 AA
X        IN      TYPE50  \# 2 AA
X        IN      TYPE51  \# 4 AABB
X        IN      TYPE52  \# 6 AABBCC
X        IN      TYPE53  \# 8 AABBCCDD
X        IN      TYPE54  \# 10 AABBCCDDEE
X        IN      TYPE55  \# 12 AABBCCDDEEFF
X        IN      TYPE56  \# 14 AABBCCDDEEFF11
;
X        IN      TYPE200  \# 14 AABBCCDDEEFF11
X        IN      TYPE201  \# 14 AABBCCDDEEFF11
X        IN      TYPE202  \# 14 AABBCCDDEEFF11
SHAR_EOF
  (set 20 05 12 15 10 14 43 'unknown_rr.zone'; eval "$shar_touch") &&
  chmod 0600 'unknown_rr.zone' ||
  $echo 'restore of' 'unknown_rr.zone' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'unknown_rr.zone:' 'MD5 check failed'
85895abfd509af4161e0eb47ba8d8b7c  unknown_rr.zone
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'unknown_rr.zone'`"
    test 817 -eq "$shar_count" ||
    $echo 'unknown_rr.zone:' 'original size' '817,' 'current size' "$shar_count!"
  fi
fi
rm -fr _sh19340
exit 0
